-----------------------------------com.gen.test.model.NamedResponseType.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class NamedResponseType implements Serializable
{


    /**
     * Creates a new NamedResponseType.
     * 
     */
    public NamedResponseType() {
        super();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    public boolean equals(Object other) {
        if (other == null) {
            return false;
        }
        if (other == this) {
            return true;
        }
        if (this.getClass()!= other.getClass()) {
            return false;
        }
        NamedResponseType otherObject = ((NamedResponseType) other);
        return new EqualsBuilder().isEquals();
    }

    public String toString() {
        return new ToStringBuilder(this).toString();
    }

}
-----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.@project.version@)
 *
 */
@RestController
@Validated
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


    /**
     * No description
     *
     */
    @GetMapping
    public ResponseEntity<?> getObject();

    /**
     * Get base entity by ID
     *
     */
    @GetMapping("/{id}")
    public ResponseEntity<NamedResponseType> getNamedResponseTypeById(
        @PathVariable
        String id);

    /**
     * No description
     *
     */
    @GetMapping("/{id}/elements")
    public ResponseEntity<?> getObject(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(defaultValue = "dummyDefault", required = false)
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader);

}
