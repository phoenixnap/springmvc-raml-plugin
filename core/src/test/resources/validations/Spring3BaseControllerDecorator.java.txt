-----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.ResponseEntity;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.@project.version@)
 * 
 */
public interface BaseController {


    /**
     * No description
     *
     */
    public ResponseEntity<?> getBase();

    /**
     * Get base entity by ID
     *
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id);

    /**
     * No description
     *
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.@project.version@)
 *
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
@Validated
public class BaseControllerDecorator
    implements BaseController
{

    @Autowired
    private BaseController baseControllerDelegate;

	/**
	 * No description
	 *
	 */
	@RequestMapping(value = "", method = RequestMethod.GET)
	public ResponseEntity<?> getBase() {
        return this.baseControllerDelegate.getBase();
	}

    /**
     * Get base entity by ID
     *
     */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	@ResponseBody
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id) {
        return this.baseControllerDelegate.getBaseById(id);
    }

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader) {
        return this.baseControllerDelegate.getElements(id, requiredQueryParam, optionalQueryParam, optionalQueryParam2, xMyHeader, xAnotherHeader);
    }

}
