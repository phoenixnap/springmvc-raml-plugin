-----------------------------------com.gen.test.model.Device.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Device implements Serializable
{

    protected com.gen.test.model.Phone Phone;
    protected com.gen.test.model.Notebook Notebook;

    /**
     * Creates a new Device.
     * 
     */
    public Device() {
        super();
    }

    /**
     * Creates a new Device.
     * 
     */
    public Device(com.gen.test.model.Phone Phone, com.gen.test.model.Notebook Notebook) {
        super();
        this.Phone = Phone;
        this.Notebook = Notebook;
    }

    /**
     * Returns the Phone.
     * 
     * @return
     *     Phone
     */
    @NotNull
    @Valid
    public com.gen.test.model.Phone getPhone() {
        return Phone;
    }

    /**
     * Set the Phone.
     * 
     * @param Phone
     *     the new Phone
     */
    public void setPhone(com.gen.test.model.Phone Phone) {
        this.Phone = Phone;
    }

    /**
     * Returns the Notebook.
     * 
     * @return
     *     Notebook
     */
    @NotNull
    @Valid
    public com.gen.test.model.Notebook getNotebook() {
        return Notebook;
    }

    /**
     * Set the Notebook.
     * 
     * @param Notebook
     *     the new Notebook
     */
    public void setNotebook(com.gen.test.model.Notebook Notebook) {
        this.Notebook = Notebook;
    }

    public int hashCode() {
        return new HashCodeBuilder().append(Phone).append(Notebook).toHashCode();
    }

    public boolean equals(Object other) {
        if (other == null) {
            return false;
        }
        if (other == this) {
            return true;
        }
        if (this.getClass()!= other.getClass()) {
            return false;
        }
        Device otherObject = ((Device) other);
        return new EqualsBuilder().append(Phone, otherObject.Phone).append(Notebook, otherObject.Notebook).isEquals();
    }

    public String toString() {
        return new ToStringBuilder(this).append("Phone", Phone).append("Notebook", Notebook).toString();
    }

}
-----------------------------------com.gen.test.model.Notebook.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import javax.validation.constraints.NotNull;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Notebook implements Serializable
{

    protected String manufacturer;
    protected Double numberOfUSBPorts;

    /**
     * Creates a new Notebook.
     * 
     */
    public Notebook() {
        super();
    }

    /**
     * Creates a new Notebook.
     * 
     */
    public Notebook(String manufacturer, Double numberOfUSBPorts) {
        super();
        this.manufacturer = manufacturer;
        this.numberOfUSBPorts = numberOfUSBPorts;
    }

    /**
     * Returns the manufacturer.
     * 
     * @return
     *     manufacturer
     */
    @NotNull
    public String getManufacturer() {
        return manufacturer;
    }

    /**
     * Set the manufacturer.
     * 
     * @param manufacturer
     *     the new manufacturer
     */
    public void setManufacturer(String manufacturer) {
        this.manufacturer = manufacturer;
    }

    /**
     * Returns the numberOfUSBPorts.
     * 
     * @return
     *     numberOfUSBPorts
     */
    @NotNull
    public Double getNumberOfUSBPorts() {
        return numberOfUSBPorts;
    }

    /**
     * Set the numberOfUSBPorts.
     * 
     * @param numberOfUSBPorts
     *     the new numberOfUSBPorts
     */
    public void setNumberOfUSBPorts(Double numberOfUSBPorts) {
        this.numberOfUSBPorts = numberOfUSBPorts;
    }

    public int hashCode() {
        return new HashCodeBuilder().append(manufacturer).append(numberOfUSBPorts).toHashCode();
    }

    public boolean equals(Object other) {
        if (other == null) {
            return false;
        }
        if (other == this) {
            return true;
        }
        if (this.getClass()!= other.getClass()) {
            return false;
        }
        Notebook otherObject = ((Notebook) other);
        return new EqualsBuilder().append(manufacturer, otherObject.manufacturer).append(numberOfUSBPorts, otherObject.numberOfUSBPorts).isEquals();
    }

    public String toString() {
        return new ToStringBuilder(this).append("manufacturer", manufacturer).append("numberOfUSBPorts", numberOfUSBPorts).toString();
    }

}
-----------------------------------com.gen.test.model.Phone.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import javax.validation.constraints.NotNull;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Phone implements Serializable
{

    protected String manufacturer;
    protected Double numberOfSIMCards;

    /**
     * Creates a new Phone.
     * 
     */
    public Phone() {
        super();
    }

    /**
     * Creates a new Phone.
     * 
     */
    public Phone(String manufacturer, Double numberOfSIMCards) {
        super();
        this.manufacturer = manufacturer;
        this.numberOfSIMCards = numberOfSIMCards;
    }

    /**
     * Returns the manufacturer.
     * 
     * @return
     *     manufacturer
     */
    @NotNull
    public String getManufacturer() {
        return manufacturer;
    }

    /**
     * Set the manufacturer.
     * 
     * @param manufacturer
     *     the new manufacturer
     */
    public void setManufacturer(String manufacturer) {
        this.manufacturer = manufacturer;
    }

    /**
     * Returns the numberOfSIMCards.
     * 
     * @return
     *     numberOfSIMCards
     */
    @NotNull
    public Double getNumberOfSIMCards() {
        return numberOfSIMCards;
    }

    /**
     * Set the numberOfSIMCards.
     * 
     * @param numberOfSIMCards
     *     the new numberOfSIMCards
     */
    public void setNumberOfSIMCards(Double numberOfSIMCards) {
        this.numberOfSIMCards = numberOfSIMCards;
    }

    public int hashCode() {
        return new HashCodeBuilder().append(manufacturer).append(numberOfSIMCards).toHashCode();
    }

    public boolean equals(Object other) {
        if (other == null) {
            return false;
        }
        if (other == this) {
            return true;
        }
        if (this.getClass()!= other.getClass()) {
            return false;
        }
        Phone otherObject = ((Phone) other);
        return new EqualsBuilder().append(manufacturer, otherObject.manufacturer).append(numberOfSIMCards, otherObject.numberOfSIMCards).isEquals();
    }

    public String toString() {
        return new ToStringBuilder(this).append("manufacturer", manufacturer).append("numberOfSIMCards", numberOfSIMCards).toString();
    }

}
-----------------------------------com.gen.test.ApiDeviceController.java-----------------------------------

package com.gen.test;

import com.gen.test.model.Device;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * Api for devices
 * (Generated with springmvc-raml-parser v.@project.version@)
 *
 */
@RestController
@Validated
@RequestMapping(value = "/api/devices", produces = "application/json")
public interface ApiDeviceController {


    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ResponseEntity<Device> getDeviceById(
        @PathVariable
        String id);

}
