-----------------------------------com.gen.test.model.Object.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import javax.validation.constraints.NotNull;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Object implements Serializable
{

    protected Long stuffId;
    protected Long coolerId;

    /**
     * Creates a new Object.
     * 
     */
    public Object() {
        super();
    }

    /**
     * Creates a new Object.
     * 
     */
    public Object(Long stuffId, Long coolerId) {
        super();
        this.stuffId = stuffId;
        this.coolerId = coolerId;
    }

    /**
     * Returns the stuffId.
     * 
     * @return
     *     stuffId
     */
    @NotNull
    public Long getStuffId() {
        return stuffId;
    }

    /**
     * Set the stuffId.
     * 
     * @param stuffId
     *     the new stuffId
     */
    public void setStuffId(Long stuffId) {
        this.stuffId = stuffId;
    }

    /**
     * Returns the coolerId.
     * 
     * @return
     *     coolerId
     */
    @NotNull
    public Long getCoolerId() {
        return coolerId;
    }

    /**
     * Set the coolerId.
     * 
     * @param coolerId
     *     the new coolerId
     */
    public void setCoolerId(Long coolerId) {
        this.coolerId = coolerId;
    }

    public int hashCode() {
        return new HashCodeBuilder().append(stuffId).append(coolerId).toHashCode();
    }

    public boolean equals(java.lang.Object other) {
        if (other == null) {
            return false;
        }
        if (other == this) {
            return true;
        }
        if (this.getClass()!= other.getClass()) {
            return false;
        }
        Object otherObject = ((Object) other);
        return new EqualsBuilder().append(stuffId, otherObject.stuffId).append(coolerId, otherObject.coolerId).isEquals();
    }

    public String toString() {
        return new ToStringBuilder(this).append("stuffId", stuffId).append("coolerId", coolerId).toString();
    }

}
-----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import com.gen.test.model.Object;
import org.springframework.http.ResponseEntity;


/**
 * No description
 * (Generated with springmvc-raml-parser v.@project.version@)
 *
 */
public interface BaseController {


    /**
     * No description
     *
     */
    public ResponseEntity<Object> createObject(
        @Valid
        Object object);

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import com.gen.test.model.Object;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.@project.version@)
 *
 */
@RestController
@RequestMapping("/api/base")
@Validated
public class BaseControllerDecorator
    implements BaseController
{

    @Autowired
    private BaseController baseControllerDelegate;

    /**
     * No description
     *
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<Object> createObject(
        @Valid
        @RequestBody
        Object object) {
        return this.baseControllerDelegate.createObject(object);
    }

}
