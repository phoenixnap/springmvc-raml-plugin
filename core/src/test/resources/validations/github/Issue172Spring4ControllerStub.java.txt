-----------------------------------com.gen.test.model.EventCreate.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class EventCreate implements Serializable
{

    /**
     * The Name of the event
     * 
     */
    protected String eventName;
    /**
     * The event payload
     * 
     */
    protected EventPayload eventPayload;

    /**
     * Creates a new EventCreate.
     * 
     */
    public EventCreate() {
        super();
    }

    /**
     * Creates a new EventCreate.
     * 
     */
    public EventCreate(String eventName, EventPayload eventPayload) {
        super();
        this.eventName = eventName;
        this.eventPayload = eventPayload;
    }

    /**
     * Returns the eventName.
     * 
     * @return
     *     eventName
     */
    @NotNull
    public String getEventName() {
        return eventName;
    }

    /**
     * Set the eventName.
     * 
     * @param eventName
     *     the new eventName
     */
    public void setEventName(String eventName) {
        this.eventName = eventName;
    }

    /**
     * Returns the eventPayload.
     * 
     * @return
     *     eventPayload
     */
    @NotNull
    @Valid
    public EventPayload getEventPayload() {
        return eventPayload;
    }

    /**
     * Set the eventPayload.
     * 
     * @param eventPayload
     *     the new eventPayload
     */
    public void setEventPayload(EventPayload eventPayload) {
        this.eventPayload = eventPayload;
    }

    public int hashCode() {
        return new HashCodeBuilder().append(eventName).append(eventPayload).toHashCode();
    }

    public boolean equals(Object other) {
        if (other == null) {
            return false;
        }
        if (other == this) {
            return true;
        }
        if (this.getClass()!= other.getClass()) {
            return false;
        }
        EventCreate otherObject = ((EventCreate) other);
        return new EqualsBuilder().append(eventName, otherObject.eventName).append(eventPayload, otherObject.eventPayload).isEquals();
    }

    public String toString() {
        return new ToStringBuilder(this).append("eventName", eventName).append("eventPayload", eventPayload).toString();
    }

}
-----------------------------------com.gen.test.model.EventPayload.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class EventPayload implements Serializable
{


    /**
     * Creates a new EventPayload.
     * 
     */
    public EventPayload() {
        super();
    }

    public int hashCode() {
        return new HashCodeBuilder().toHashCode();
    }

    public boolean equals(Object other) {
        if (other == null) {
            return false;
        }
        if (other == this) {
            return true;
        }
        if (this.getClass()!= other.getClass()) {
            return false;
        }
        EventPayload otherObject = ((EventPayload) other);
        return new EqualsBuilder().isEquals();
    }

    public String toString() {
        return new ToStringBuilder(this).toString();
    }

}
-----------------------------------com.gen.test.EventController.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import com.gen.test.model.EventCreate;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.@project.version@)
 * 
 */
@RestController
@RequestMapping("/api/events")
@Validated
public class EventController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<?> createEventCreate(
        @Valid
        @RequestBody
        EventCreate eventCreate) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}