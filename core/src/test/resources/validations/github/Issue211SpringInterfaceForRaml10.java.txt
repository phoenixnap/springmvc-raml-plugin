-----------------------------------com.gen.test.model.User.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.NotNull;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class User implements Serializable
{

    protected List<String> nickNames = new ArrayList<String>();
    protected List<Double> orderNumbers = new ArrayList<Double>();

    /**
     * Creates a new User.
     *
     */
    public User() {
        super();
    }

    /**
     * Creates a new User.
     *
     */
    public User(List<String> nickNames, List<Double> orderNumbers) {
        super();
        this.nickNames = nickNames;
        this.orderNumbers = orderNumbers;
    }

    /**
     * Returns the nickNames.
     *
     * @return
     *     nickNames
     */
    @NotNull
    public List<String> getNickNames() {
        return nickNames;
    }

    /**
     * Set the nickNames.
     *
     * @param nickNames
     *     the new nickNames
     */
    public void setNickNames(List<String> nickNames) {
        this.nickNames = nickNames;
    }

    /**
     * Returns the orderNumbers.
     *
     * @return
     *     orderNumbers
     */
    @NotNull
    public List<Double> getOrderNumbers() {
        return orderNumbers;
    }

    /**
     * Set the orderNumbers.
     *
     * @param orderNumbers
     *     the new orderNumbers
     */
    public void setOrderNumbers(List<Double> orderNumbers) {
        this.orderNumbers = orderNumbers;
    }

    public int hashCode() {
        return new HashCodeBuilder().append(nickNames).append(orderNumbers).toHashCode();
    }

    public boolean equals(Object other) {
        if (other == null) {
            return false;
        }
        if (other == this) {
            return true;
        }
        if (this.getClass()!= other.getClass()) {
            return false;
        }
        User otherObject = ((User) other);
        return new EqualsBuilder().append(nickNames, otherObject.nickNames).append(orderNumbers, otherObject.orderNumbers).isEquals();
    }

    public String toString() {
        return new ToStringBuilder(this).append("nickNames", nickNames).append("orderNumbers", orderNumbers).toString();
    }

}
-----------------------------------com.gen.test.UserController.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import com.gen.test.model.User;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.@project.version@)
 *
 */
@RestController
@Validated
@RequestMapping("/api/domain/{domainId}/users")
public interface UserController {


    /**
     * No description
     *
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<User> createUser(
        @PathVariable
        String domainId,
        @Valid
        @RequestBody
        User user);

    /**
     * No description
     *
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.PUT)
    public ResponseEntity<User> updateUser(
        @PathVariable
        String id,
        @PathVariable
        String domainId,
        @Valid
        @RequestBody
        User user);

}
