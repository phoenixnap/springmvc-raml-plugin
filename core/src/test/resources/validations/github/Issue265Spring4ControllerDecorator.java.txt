-----------------------------------com.gen.test.model.Address.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import javax.validation.constraints.NotNull;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Address implements Serializable
{

    protected String city;
    protected String street;
    protected String houseNo;

    /**
     * Creates a new Address.
     * 
     */
    public Address() {
        super();
    }

    /**
     * Creates a new Address.
     * 
     */
    public Address(String city, String street, String houseNo) {
        super();
        this.city = city;
        this.street = street;
        this.houseNo = houseNo;
    }

    /**
     * Returns the city.
     * 
     * @return
     *     city
     */
    @NotNull
    public String getCity() {
        return city;
    }

    /**
     * Set the city.
     * 
     * @param city
     *     the new city
     */
    public void setCity(String city) {
        this.city = city;
    }

    /**
     * Returns the street.
     * 
     * @return
     *     street
     */
    @NotNull
    public String getStreet() {
        return street;
    }

    /**
     * Set the street.
     * 
     * @param street
     *     the new street
     */
    public void setStreet(String street) {
        this.street = street;
    }

    /**
     * Returns the houseNo.
     * 
     * @return
     *     houseNo
     */
    @NotNull
    public String getHouseNo() {
        return houseNo;
    }

    /**
     * Set the houseNo.
     * 
     * @param houseNo
     *     the new houseNo
     */
    public void setHouseNo(String houseNo) {
        this.houseNo = houseNo;
    }

    public int hashCode() {
        return new HashCodeBuilder().append(city).append(street).append(houseNo).toHashCode();
    }

    public boolean equals(Object other) {
        if (other == null) {
            return false;
        }
        if (other == this) {
            return true;
        }
        if (this.getClass()!= other.getClass()) {
            return false;
        }
        Address otherObject = ((Address) other);
        return new EqualsBuilder().append(city, otherObject.city).append(street, otherObject.street).append(houseNo, otherObject.houseNo).isEquals();
    }

    public String toString() {
        return new ToStringBuilder(this).append("city", city).append("street", street).append("houseNo", houseNo).toString();
    }

}
-----------------------------------com.gen.test.model.Child.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import javax.validation.constraints.NotNull;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Child
    extends Parent
    implements Serializable
{


    /**
     * Creates a new Child.
     * 
     */
    public Child() {
        super();
    }

    /**
     * Returns the address.
     * 
     * @return
     *     address
     */
    @NotNull
    public Address getAddress() {
        return address;
    }

    public int hashCode() {
        return new HashCodeBuilder().appendSuper(super.hashCode()).toHashCode();
    }

    public boolean equals(Object other) {
        if (other == null) {
            return false;
        }
        if (other == this) {
            return true;
        }
        if (this.getClass()!= other.getClass()) {
            return false;
        }
        Child otherObject = ((Child) other);
        return new EqualsBuilder().appendSuper(super.equals(otherObject)).isEquals();
    }

    public String toString() {
        return new ToStringBuilder(this).appendSuper(super.toString()).toString();
    }

}
-----------------------------------com.gen.test.model.Parent.java-----------------------------------

package com.gen.test.model;

import java.io.Serializable;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Parent implements Serializable
{

    protected Address address;

    /**
     * Creates a new Parent.
     * 
     */
    public Parent() {
        super();
    }

    /**
     * Creates a new Parent.
     * 
     */
    public Parent(Address address) {
        super();
        this.address = address;
    }

    /**
     * Returns the address.
     * 
     * @return
     *     address
     */
    @NotNull
    @Valid
    public Address getAddress() {
        return address;
    }

    /**
     * Set the address.
     * 
     * @param address
     *     the new address
     */
    public void setAddress(Address address) {
        this.address = address;
    }

    public int hashCode() {
        return new HashCodeBuilder().append(address).toHashCode();
    }

    public boolean equals(Object other) {
        if (other == null) {
            return false;
        }
        if (other == this) {
            return true;
        }
        if (this.getClass()!= other.getClass()) {
            return false;
        }
        Parent otherObject = ((Parent) other);
        return new EqualsBuilder().append(address, otherObject.address).isEquals();
    }

    public String toString() {
        return new ToStringBuilder(this).append("address", address).toString();
    }

}
-----------------------------------com.gen.test.ParentController.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import com.gen.test.model.Child;
import org.springframework.http.ResponseEntity;


/**
 * No description
 * (Generated with springmvc-raml-parser v.@project.version@)
 * 
 */
public interface ParentController {


    /**
     * No description
     * 
     */
    public ResponseEntity<?> createChild(
        @Valid
        Child child);

}
-----------------------------------com.gen.test.ParentControllerDecorator.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import com.gen.test.model.Child;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.@project.version@)
 * 
 */
@RestController
@RequestMapping("/api/parent")
@Validated
public class ParentControllerDecorator
    implements ParentController
{

    @Autowired
    private ParentController parentControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<?> createChild(
        @Valid
        @RequestBody
        Child child) {
        return this.parentControllerDelegate.createChild(child);
    }

}
